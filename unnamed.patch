Index: Beta 1.0/code/__init__.py
===================================================================
diff --git a/Beta 1.0/code/__init__.py b/Beta 1.0/code/__init__.py
deleted file mode 100644
--- a/Beta 1.0/code/__init__.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,61 +0,0 @@
-# import pygame
-# import sys
-#
-# # Initialize Pygame
-# pygame.init()
-#
-# # Screen dimensions
-# SCREEN_WIDTH = 800
-# SCREEN_HEIGHT = 600
-#
-# # Load Bullet1 image
-# BULLET_IMAGE = pygame.image.load(
-# 	'../data/img/gun/bullet1.png')  # Make sure Bullet1.png is in the same directory or provide the correct path
-#
-#
-# # GunBullets class definition
-# class GunBullets(pygame.sprite.Sprite):
-# 	def __init__(self, x, y):
-# 		super().__init__()
-# 		self.image = BULLET_IMAGE
-# 		self.rect = self.image.get_rect()
-# 		self.rect.center = (x, y)
-#
-# 	def update(self):
-# 		self.rect.y -= 5  # Move the bullet upwards
-# 		if self.rect.bottom < 0:
-# 			self.kill()  # Remove the bullet if it goes off-screen
-#
-#
-# # Main game loop
-# def main():
-# 	screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
-# 	pygame.display.set_caption("GunBullets Example")
-#
-# 	all_sprites = pygame.sprite.Group()
-#
-# 	clock = pygame.time.Clock()
-#
-# 	while True:
-# 		for event in pygame.event.get():
-# 			if event.type == pygame.QUIT:
-# 				pygame.quit()
-# 				sys.exit()
-#
-# 		# Add a bullet for demonstration purposes
-# 		if pygame.mouse.get_pressed()[0]:  # Left mouse button
-# 			bullet = GunBullets(*pygame.mouse.get_pos())
-# 			all_sprites.add(bullet)
-#
-# 		all_sprites.update()
-#
-# 		screen.fill((0, 0, 0))  # Clear screen with black
-# 		all_sprites.draw(screen)
-#
-# 		pygame.display.flip()
-#
-# 		clock.tick(60)
-#
-#
-# if __name__ == "__main__":
-# 	main()
Index: Beta 1.0/code/asdasdsad.py
===================================================================
diff --git a/Beta 1.0/code/asdasdsad.py b/Beta 1.0/code/asdasdsad.py
deleted file mode 100644
--- a/Beta 1.0/code/asdasdsad.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,58 +0,0 @@
-import pygame
-import sys
-import math
-
-# Pygame 초기화
-pygame.init()
-
-# 창 크기 설정
-WIDTH, HEIGHT = 800, 600
-screen = pygame.display.set_mode((WIDTH, HEIGHT))
-pygame.display.set_caption("Path Movement")
-
-# 색상 정의
-WHITE = (255, 255, 255)
-RED = (255, 0, 0)
-
-
-# pos1에서 pos2로 이동하는 경로 생성 함수
-def generate_path(pos1, pos2, steps=100):
-	path = []
-	x1, y1 = pos1
-	x2, y2 = pos2
-
-	for i in range(steps):
-		t = i / (steps - 1)
-		x = x1 + (x2 - x1) * t
-		y = y1 + (y2 - y1) * t
-		path.append((x, y))
-
-	return path
-
-
-# 객체를 따라 이동시키는 함수
-def move_along_path(path):
-	for pos in path:
-		screen.fill(WHITE)
-		pygame.draw.circle(screen, RED, (int(pos[0]), int(pos[1])), 5)
-		pygame.display.flip()
-		pygame.time.delay(30)
-
-
-# 메인 함수
-def main():
-	pos1 = [300, 300]
-	pos2 = [500, 400]
-	path = generate_path(pos1, pos2, 10)
-
-	while True:
-		for event in pygame.event.get():
-			if event.type == pygame.QUIT:
-				pygame.quit()
-				sys.exit()
-
-		move_along_path(path)
-
-
-if __name__ == "__main__":
-	main()
Index: Beta 1.0/code/attack_alg.py
===================================================================
diff --git a/Beta 1.0/code/attack_alg.py b/Beta 1.0/code/attack_alg.py
deleted file mode 100644
--- a/Beta 1.0/code/attack_alg.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,24 +0,0 @@
-import math
-
-def radius_detect(pos1: tuple, pos2: tuple, r):
-	d = math.sqrt((pos1[0]-pos2[0])**2 + (pos1[1]-pos2[1])**2)
-	return d <= r
-
-def distance(pos1: list | tuple, pos2: list | tuple):
-	return math.sqrt((pos1[0]-pos2[0])**2 + (pos1[1]-pos2[1])**2)
-
-def generate_path(pos1, pos2, steps=100):
-	path = []
-	x1, y1 = pos1
-	x2, y2 = pos2
-	print(pos2)
-
-	for i in range(steps):
-		t = i / (steps - 1)
-		x = x1 + (x2 - x1) * t
-		y = y1 + (y2 - y1) * t
-		path.append((x, y))
-
-	return path
-
-# print(radius_detect((0, 0), (3, 0), 3))
\ No newline at end of file
Index: Beta 1.0/code/button.py
===================================================================
diff --git a/Beta 1.0/code/button.py b/Beta 1.0/code/button.py
deleted file mode 100644
--- a/Beta 1.0/code/button.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,32 +0,0 @@
-import pygame
-
-
-# button class
-class Button:
-	def __init__(self, x, y, image, scale):
-		width = image.get_width()
-		height = image.get_height()
-		self.image = pygame.transform.scale(image, (int(width * scale), int(height * scale)))
-		self.rect = self.image.get_rect()
-		self.rect.topleft = (x, y)
-		self.clicked = False
-
-	def draw(self, surface):
-		action = False
-
-		# get mouse position
-		pos = pygame.mouse.get_pos()
-
-		# check mouseover and clicked conditions
-		if self.rect.collidepoint(pos):
-			if pygame.mouse.get_pressed()[0] == 1 and self.clicked == False:
-				action = True
-				self.clicked = True
-
-		if pygame.mouse.get_pressed()[0] == 0:
-			self.clicked = False
-
-		# draw button
-		surface.blit(self.image, (self.rect.x, self.rect.y))
-
-		return action
Index: Beta 1.0/code/cousor.py
===================================================================
diff --git a/Beta 1.0/code/cousor.py b/Beta 1.0/code/cousor.py
deleted file mode 100644
--- a/Beta 1.0/code/cousor.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,31 +0,0 @@
-import pygame
-
-class Cousor:
-	def __init__(self, screen, size, *pos):
-		self.pos = pos
-		self.cousor_img = pygame.image.load("data/img/cousor.png")
-		self.cousor_img.get_size()
-		# print(list(map(lambda x: x/size,self.cousor_img.get_size())))
-		self.cousor_img = pygame.transform.scale(self.cousor_img, list(map(lambda x: x/size,self.cousor_img.get_size())))
-		self.p_len = len(pos)
-		self.root = screen
-		self.now_index = 0
-		self.cousor_sound = pygame.mixer.Sound("data/sound/effect/A piano.wav")
-
-	def cousor_up(self):
-		if self.now_index != 0:
-			self.now_index -= 1
-			self.cousor_sound.play()
-
-	def cousor_down(self):
-		if self.now_index != self.p_len-1:
-			self.now_index += 1
-			self.cousor_sound.play()
-
-
-	def get_cousor_index(self):
-		print(self.pos[self.now_index], self.now_index)
-		return self.now_index
-
-	def draw(self):
-		self.root.blit(self.cousor_img, self.pos[self.now_index])
\ No newline at end of file
Index: Beta 1.0/code/gui.py
===================================================================
diff --git a/Beta 1.0/code/gui.py b/Beta 1.0/code/gui.py
deleted file mode 100644
--- a/Beta 1.0/code/gui.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,105 +0,0 @@
-import pygame, sys
-
-
-
-
-def text_draw(surface, size, text, color, posx, posy, sort=0):
-	font = pygame.font.Font("data\\font\\DungGeunMo.otf", size)
-	t = font.render(text, True, color)
-	if sort: surface.blit(t, (posx-t.get_size()[0], posy))
-	else: surface.blit(t, (posx, posy))
-
-
-class StatsBar:
-	def __init__(self, screen):
-		self.screen = screen
-		self.hp = 0
-		self.rect = pygame.rect.Rect(620 - self.hp, 440, self.hp, 20)
-		self.room_N = 0
-		self.heartbeat = pygame.mixer.Sound("data\\sound\\effect\\HeartBeat.mp3")
-		self.gun_bullet_img = [pygame.image.load("data\\img\\Gun\\bullet1.png"), pygame.image.load("data\\img\\Gun\\bullet2.png")]
-		self.gun_bullet_img = list(map(lambda x: pygame.transform.scale(x, (18, 32)), self.gun_bullet_img))
-		self.gun_bullets = []
-		self.heartbeat.play(-1)
-		self.heartbeat.set_volume(0)
-		self.now_gun = None
-		self.now_gun_name = None
-
-
-	def parameter_edit(self, *args):
-		self.hp = args[0]
-		self.room_N = args[1]
-		self.rect = pygame.rect.Rect(620 - self.hp, 440, self.hp, 20)
-		self.gun_bullets = args[2]
-		self.now_gun = pygame.transform.scale(pygame.image.load(f"data/img/gun/{args[3]}.png"), (52, 35))
-		self.now_gun_name = args[3]
-	def draw(self):
-		self._drawNowRoom()
-		self._drawStatusBar()
-		self._drawNowBullet()
-		self.screen.blit(self.now_gun,dest=(15, 390))
-		text_draw(self.screen, 30, self.now_gun_name, (255, 255, 255), 15, 360)
-
-	def _drawNowBullet(self):
-		a = 100
-		text_draw(self.screen, 20, f"{self.gun_bullets[0]} / {self.gun_bullets[2]*self.gun_bullets[1]}", (255, 255, 255), 118, 410, sort=1)
-		for i in range(self.gun_bullets[1], 0, -1):  # 전체 탄환 수로 반복문 돌리기
-			self.screen.blit(self.gun_bullet_img[int(self.gun_bullets[0]<self.gun_bullets[1]-i+1)], (i*(a/self.gun_bullets[1]), 432))
-
-	def _drawNowRoom(self):
-		t = "현재 위치 | GAYGAY YA"
-		text_draw(self.screen, 30, t, (255, 255, 255), 0, 0)  # 620-t.__len__()*10,
-
-	def _drawStatusBar(self):
-		color = (255, 255, 255)
-		h = self.hp // 10
-
-		if h < 2:
-			color = pygame.Color("red")
-			self.heartbeat.set_volume(1)
-		elif h < 4:
-			color = (200, 0, 0)
-			self.heartbeat.set_volume(0.5)
-		elif h < 8:
-			color = (255, 255, 0)
-			self.heartbeat.set_volume(0.1)
-		else: self.heartbeat.set_volume(0)
-		text = "HP | {}".format(self.hp)
-		text_draw(self.screen, 20, text, color, 620, 420, sort=1)
-		pygame.draw.rect(self.screen, color, self.rect)
-
-if __name__ == "__main__":
-	pygame.init()
-	window = pygame.display.set_mode((640, 480))
-	clock = pygame.time.Clock()
-	k = 100
-	roomnumber = 0
-	a, b, c = 10, 10, 3
-	S = StatsBar(window)
-	while True:
-		# if k == 360: k = 0
-		window.fill((0))
-		S.parameter_edit(k, roomnumber, (a, b, c))
-		S.draw()
-		for event in pygame.event.get():
-			if event.type == pygame.KEYDOWN:
-				if event.key == pygame.K_DOWN and not k == 10:
-					k -= 10
-				if event.key == pygame.K_UP and not k == 200:
-					k += 10
-				if event.key == pygame.K_t: roomnumber += 1
-				if event.key == pygame.K_g: roomnumber -= 1
-				if event.key == pygame.K_r and a != b:
-					a+=1
-				if event.key == pygame.K_f and a != 0: a -= 1
-				if event.key == pygame.K_c:
-					a = 0
-					b += 1
-				if event.key == pygame.K_d:
-					a = 0
-					b -= 1
-			if event.type == pygame.QUIT or (event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE):
-				pygame.quit()
-				sys.exit()
-		pygame.display.update()
-		clock.tick(30)
\ No newline at end of file
Index: Beta 1.0/code/gun_shoot.py
===================================================================
diff --git a/Beta 1.0/code/gun_shoot.py b/Beta 1.0/code/gun_shoot.py
deleted file mode 100644
--- a/Beta 1.0/code/gun_shoot.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,25 +0,0 @@
-import pygame
-
-class Bullet(pygame.sprite.Sprite):
-	def __init__(self, x, y):
-		super().__init__()
-		self.image = pygame.transform.scale(pygame.image.load("data/img/gun/bullet1.png"), (20, 20))
-		self.rect = self.image.get_rect()
-		pygame.mixer.Sound("data/sound/effect/Rebolber1.mp3").play()
-		self.bullet_distance = 0
-		self.rect.center = (x, y)
-		self.bullet_speed = 5
-
-	def update(self):
-		self.rect.y -= self.bullet_speed  # Move the bullet upwards
-		self.bullet_distance -= self.bullet_speed
-		if self.bullet_distance < -1000:
-			print("꽥")
-			self.kill()  # Remove the bullet if it goes off-screen
-
-class Gun:
-	def __init__(self, screen, gun_type):
-		self.gun_img = pygame.image.load(f"data/gun/{gun_type}.png")
-		self.bullet = pygame.image.load("data/gun/bullet1.png")
-		self.screen = screen
-
Index: Beta 1.0/code/inventory.py
===================================================================
diff --git a/Beta 1.0/code/inventory.py b/Beta 1.0/code/inventory.py
deleted file mode 100644
--- a/Beta 1.0/code/inventory.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,3 +0,0 @@
-class Inventory:
-	def __init__(self):
-		self.item_names = ["Notanium", "Notanium Ingot", "Notanium Nugget", "Notanium Bullet", "M1911", "WbRebolber", "Bread"]
Index: Beta 1.0/code/MAP.py
===================================================================
diff --git a/Beta 1.0/code/MAP.py b/Beta 1.0/code/MAP.py
deleted file mode 100644
--- a/Beta 1.0/code/MAP.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,304 +0,0 @@
-# this is main source assets.
-# Grappic asset or maps.
-import json
-import pygame
-import sys
-#import effect
-"""
-에셋 종류
-Bricks1: 일반 벽돌
-Bricks2: 이끼 낀 벽돌
-Bricks3: 금간 벽돌
-"""
-
-DEBUG = False
-print(__name__)
-
-
-class Map:
-	def __init__(self, screen):
-		self.assets = \
-			{
-				"SpaceTile1":pygame.image.load("data/img/tile/SPACESHIPS/SpaceTile1.png"),
-				"SpaceTileCorner1": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileCorner1.png"),
-				"SpaceTileCorner2": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileCorner2.png"),
-				"SpaceTileCorner3": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileCorner3.png"),
-				"SpaceTileCorner4": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileCorner4.png"),
-				"SpaceTileSide1": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileSide1.png"),
-				"SpaceTileSide2": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileSide2.png"),
-				"SpaceTileSide3": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileSide3.png"),
-				"SpaceTileSide4": pygame.image.load("data/img/tile/SPACESHIPS/SpaceTileSide4.png")
-			}
-
-		self.p_hitbox = pygame.rect.Rect(287, 215, 66, 99)
-		print(self.p_hitbox, "SAD")
-		self.p_nexthitbox = 0  # 플레이어 이동시 미리 히트박스 계산
-
-		self.root = screen  # 스크린 설정
-		self.tilesize = 60  # 타일 기본 크기
-		self.mapW, self.mapH = 0, 0  # map 가로, 세로 설정
-
-		self.rect_mask = []
-		self.brickPass = False
-		self.tile_list = []
-		self.new_tile_list = []
-		self.mapNumber = 1  # 임시지정
-		self.tile_hitboxes = []
-		self.TileHitboxIR = []
-		self.move_pos = [0, 0]
-		self.move_speed = 5
-
-		# 귀여운 미니함수~
-		self.value_to_key = lambda x, y: {i for i in x if x[i] == y}
-
-		self.color = (255, 0, 0)
-		self.tileEvent = []
-
-		# Map Count ( 맵 개수 ) 지정
-		self.MAP_COUNT = 5
-		with open("data/map/room1.json") as f:
-			self.map1 = json.load(f)
-		with open("data/map/room2.json") as f:
-			self.map2 = json.load(f)
-		with open("data/map/room3.json") as f:
-			self.map3 = json.load(f)
-		with open("data/map/room4.json") as f:
-			self.map4 = json.load(f)
-		with open("data/map/room5.json") as f:
-			self.map5 = json.load(f)
-
-	def get_key(self, val, dict):
-
-		for key, value in dict.items():
-			if val == value:
-				return key
-
-		return "key doesn't exist"
-
-	def _load(self, mapnumber):
-		self.tile_list = []
-		self.tile_hitboxes = []
-		with open(f"room{mapnumber}.json") as f:
-			self.tempMap = json.load(f)
-		if DEBUG:
-			print("map size: " + str(eval('self.map%d["size"]' % mapnumber)))
-		self.mapW, self.mapH = eval('self.map%d["size"]' % mapnumber)
-		self.mapNumber = mapnumber
-
-		for w in range(1, self.mapW + 2):
-			for h in range(1, self.mapH + 2):
-				try:
-					p = eval(f"self.map{mapnumber}[\"tilemap\"][f\"{w};{h}\"]")
-					self.tile_list.append(p)
-					if DEBUG:
-						print(f"pos:{w};{h} | " + "type:" + p["type"] + " | img: " + p["img"])
-				except KeyError:
-					pass
-					if DEBUG:
-						print("존재하지 않는 칸")
-		if DEBUG:
-			print("map size:", self.mapW, self.mapH)
-		if DEBUG:
-			print(type(self.mapH))
-
-
-	def load_to_list(self, value):
-		self.tile_hitboxes = []
-		if DEBUG:
-			print(value)
-		if DEBUG:
-			print("map size: " + str(value["size"]))
-		self.tile_list = []
-		self.mapW, self.mapH = value["size"]
-		for w in range(1, self.mapW + 2):
-			for h in range(1, self.mapH + 2):
-				try:
-					# p = eval(f"self.map{mapnumber}[\"tilemap\"][f\"{w};{h}\"]")
-					p = value["tilemap"][f"{w};{h}"]
-					self.tile_list.append(p)
-					if DEBUG: print(f"pos:{w};{h} | " + "type:" + p["type"] + " | img: " + p["img"])
-				except KeyError:
-					pass
-					if DEBUG: print("존재하지 않는 칸")
-		if DEBUG:
-			print("map size:", self.mapW, self.mapH)
-			print(type(self.mapH))
-
-	def draw_set(self):
-		self.move_pos = list(map(lambda x: x * 30, self.map1["startpos"]))
-		self.new_tile_list = []
-		# print(self.move_pos)
-		for i in range(len(self.tile_list)):
-			self.new_tile_list.append(
-				pygame.transform.scale(self.assets[self.tile_list[i]['img']], (self.tilesize, self.tilesize)))
-
-		for _ in self.tile_list:
-			self.tile_hitboxes.append("")
-		# 2871031
-		# 칸 크기 조정
-		for i in self.assets.values():
-			r = self.get_key(i, self.assets)
-			if DEBUG: print(r)
-			print(r[:6])
-			if r[:6] != "Player": self.assets[r] = pygame.transform.scale(self.assets[r], (self.tilesize, self.tilesize))
-
-
-	def var_set(self, type, result):
-		eval(f"self.{type} = {result}")
-
-	def draw(self):
-		json_map1 = self.tile_list
-		if len(self.tile_list) != 0:
-
-			for i in range(len(self.new_tile_list)):
-				# print(i)
-				try:
-					x = json_map1[i]["pos"][0] * self.tilesize - self.tilesize + self.move_pos[0]
-					y = json_map1[i]["pos"][1] * self.tilesize - self.tilesize + self.move_pos[1]
-					if json_map1[i]["type"] == "wall": self.tile_hitboxes[i] = (
-						pygame.Rect(x, y, self.tilesize, self.tilesize))
-				except IndexError:
-					pass
-			self.p_hitbox = pygame.Rect(287, 215, 66, 99)
-
-			for i in range(len(self.tile_list)):
-				try:
-					json_map1 = self.tile_list
-					# print(len(self.tile_list), len(self.new_tile_list))
-					# print(i, len(m), json_map1)
-					# try:
-					self.root.blit(self.assets[json_map1[i]["img"]],
-					               (json_map1[i]["pos"][0] * self.tilesize - self.tilesize + self.move_pos[0],
-					                json_map1[i]["pos"][1] * self.tilesize - self.tilesize + self.move_pos[1]))
-
-				except IndexError:
-					pass
-			# except IndexError: print("인덱스 에러 발생")
-
-			if DEBUG:
-				pygame.draw.rect(self.root, self.color, self.p_hitbox)
-				#pygame.draw.rect(self.root, self.color, self.tile_hitboxes[0])
-
-
-
-	def brickPassSet(self, result):
-		self.brickPass = result
-
-	def mapGet(self, mapNumber):
-		if DEBUG: print("TEST", str(eval('self.map%d' % mapNumber)))
-		return eval('self.map%d' % int(mapNumber))
-
-	# def map_dataEdit(self, mapNumber):
-
-	def event(self):
-		#pygame.draw.rect(self.root, (200, 0, 0), self.p_hitbox)
-		self.TileHitboxIR = []
-		self.tileEvent = []
-		for i in range(self.tile_list.__len__()): self.TileHitboxIR.append("None")
-		# IRID 지정
-		#(self.tile_list.__len__(), self.tile_hitboxes.__len__())
-		for i in range(len(self.tile_list)):
-			x = self.tile_list[i]["pos"][0] * self.tilesize - self.tilesize + self.move_pos[0]
-			y = self.tile_list[i]["pos"][1] * self.tilesize - self.tilesize + self.move_pos[1]
-			self.TileHitboxIR[i] = (pygame.Rect(x, y, self.tilesize, self.tilesize))
-
-		# IRID 설정
-		for tileIR in self.TileHitboxIR:
-
-			if self.p_hitbox.colliderect(tileIR):
-				self.tileEvent.append(self.tile_list[self.TileHitboxIR.index(tileIR)]["IRID"])
-
-		# 충돌 / 이동감지
-
-		self.collides = [0, 0, 0, 0]
-		self.movetype = [0, 0, 0, 0]
-		P = pygame.key.get_pressed()
-
-		if P[pygame.K_w]: self.movetype[0] = 1
-		if P[pygame.K_s]: self.movetype[1] = 1
-		if P[pygame.K_d]: self.movetype[2] = 1
-		if P[pygame.K_a]: self.movetype[3] = 1
-
-		self.collide = False
-		for i in [0, 1, 2, 3]:  # 총 4개의 방향 이동 감지
-			a, b = 287, 215
-			next_x, next_y = 66, 99
-			if self.movetype[i]:  # 만약 i번째 키가 눌려있는가:
-				c = 0
-				if i == 0:  # 만약 위로 이동했을 때:
-					c += 1
-					b -= self.move_speed
-					next_y += self.move_speed
-				if i == 1:
-					c += 1
-					b += self.move_speed
-					next_y += self.move_speed
-				if i == 3:
-					c += 1
-					a -= self.move_speed
-				if i == 2:
-					c += 1
-					a += self.move_speed
-				self.p_nexthitbox = pygame.Rect(a, b, next_x, next_y)
-				if DEBUG:
-					pygame.draw.rect(self.root, self.color, self.p_nexthitbox)
-				for tile_rect in self.tile_hitboxes:
-					if tile_rect != '' and not self.brickPass:
-						#(tile_rect)
-						if self.p_nexthitbox.colliderect(tile_rect):
-							self.collides[i] = 1
-							break
-
-		if self.movetype[0] == 1 and not self.collides[0]:
-			self.move_pos[1] += self.move_speed
-
-		if self.movetype[1] == 1 and not self.collides[1]:
-			self.move_pos[1] -= self.move_speed
-
-		if self.movetype[2] == 1 and not self.collides[2]:
-			self.move_pos[0] -= self.move_speed
-
-		if self.movetype[3] == 1 and not self.collides[3]:
-			self.move_pos[0] += self.move_speed
-		return self.movetype
-	def moveposGet(self):
-		return self.move_pos
-
-
-if __name__ == "__main__":
-	pygame.init()
-	Screen = pygame.display.set_mode((640, 480))
-	M = Map(Screen)
-	Clock = pygame.time.Clock()
-	ROOMNUMBER = 1
-	M._load(ROOMNUMBER)
-	def main():
-		a = 1
-		global ROOMNUMBER
-		M.draw_set()
-		while True:
-			Screen.fill(0)
-			Mtype = M.event()
-
-
-			for i in range(4):
-				if Mtype[i] == 1:
-					a = i
-					break
-
-			M.draw()
-
-
-			Screen.blit(M.assets[f"Player{a+1}"], (287, 215))
-			pygame.display.update()
-			for event in pygame.event.get():
-				if event.type == pygame.QUIT:
-					pygame.quit()
-					sys.exit()
-			for i in M.tileEvent:
-				if i == 1:
-					ROOMNUMBER += 1
-					M._load(ROOMNUMBER)
-					M.draw_set()
-			Clock.tick(60)
-	main()
Index: Beta 1.0/code/msgbox.py
===================================================================
diff --git a/Beta 1.0/code/msgbox.py b/Beta 1.0/code/msgbox.py
deleted file mode 100644
--- a/Beta 1.0/code/msgbox.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,116 +0,0 @@
-import sys
-
-import pygame
-
-pygame.init()
-
-DEBUG = True
-
-IS_QUIT = False
-def eventset(r):
-    global EVENT
-    print("EVENT SETTING:", r)
-    EVENT = r
-
-
-class MsgBox:
-    def __init__(self, screen, text, speed, soundtype, size, *args):
-        self.font = pygame.font.Font("data\\font\\DungGeunMo.otf", size)
-        try:
-            self.y = args[0]
-        except IndexError:
-            self.y = 20
-        self.root = screen
-        self.P = True
-        self.size = size
-        self.text = text
-        self.text.append("")
-        self.now_text = ""
-        self.now_text_count = 0
-        print(self.text)
-        self.text_line = 0
-        self.text_maxline = self.text.__len__()
-
-        self.text_speed = speed
-        self.sound_type = soundtype
-        self.text_on = True
-        self.quit = False
-        self.time = 0
-        self.rect1 = pygame.Rect(25, 340, 590, 120)
-        self.rect2 = pygame.Rect(30, 350, 580, 100)
-        self.rect_t = []
-        for i in self.text:
-            self.rect_t.append(self.font.render(i, 1, (255, 255, 255)))
-        print(self.rect_t)
-        self.sound = [pygame.mixer.Sound("data\\sound\\effect\\A Piano.wav"), pygame.mixer.Sound("data\\sound\\effect\\A Piano.wav")]
-        self.ev = 0
-        try:
-            self.draw(more_func=args[1])
-        except IndexError:
-            self.draw()
-
-
-    def t_update(self):
-        self.rect_t = self.font.render(self.now_text, 1, (255, 255, 255))
-        if not len(self.text[self.text_line]) == self.now_text_count or self.now_text_count == 0 and not self.text_on:
-            print(self.text[self.text_line].__len__() == len(self.now_text))
-            if DEBUG: print("------")
-
-            self.now_text += self.text[self.text_line][self.now_text_count]
-            self.now_text_count += 1
-            if self.now_text_count != 0 and self.text[self.text_line][self.now_text_count - 1] != " ": self.sound[
-                self.sound_type].play()
-            if DEBUG:
-                print("현재 글자:", self.now_text)
-                print("현재 글자 순서:", self.now_text_count)
-        if self.now_text.__len__() == self.text[self.text_line].__len__() and self.text_line + 1 == self.text_maxline:
-            self.P = False
-        elif self.text_line == self.text_maxline:
-            self.now_text_count = 0
-            self.now_text = ""
-
-    def _draw(self) -> None:
-        pygame.draw.rect(self.root, (255, 255, 255), self.rect1)
-        pygame.draw.rect(self.root, (0), self.rect2)
-        self.root.blit(self.rect_t, (15 + self.size, 323 + self.y + self.size))
-# 아 왜 변경안됨 ;;
-    def timer(self) -> None:
-        self.time = pygame.time.get_ticks()
-
-    def get_event(self) -> int:
-        return IS_QUIT
-
-
-    def draw(self, more_func=None):
-        clock = pygame.time.Clock()
-        self.P = True
-        while self.P:
-            for event in pygame.event.get():
-
-                if event.type == pygame.QUIT:
-                    self.quit = True
-                    global IS_QUIT
-                    IS_QUIT = True
-                    self.P = False
-
-                if event.type == pygame.KEYDOWN:
-                    if (event.key == pygame.K_z or event.key == pygame.K_RETURN) and len(self.text[self.text_line]) == self.now_text_count:
-                        if self.text_maxline != self.text_line:
-                            self.text_on = True
-                            self.text_line += 1
-                            self.now_text_count = 0
-                            self.now_text = ""
-                        else:
-                            self.P = False
-                            clock.tick(30)
-                    if event.key == pygame.K_x:
-                        self.now_text = self.text[self.text_line]
-                        self.now_text_count = len(self.text[self.text_line])
-                if more_func != None:
-                    print(type(more_func))
-                    more_func(event=event)
-            self.t_update()
-            self._draw()
-            pygame.display.update()
-            clock.tick(self.text_speed)
-            pygame.display.update()
\ No newline at end of file
Index: Beta 1.0/code/opening.py
===================================================================
diff --git a/Beta 1.0/code/opening.py b/Beta 1.0/code/opening.py
deleted file mode 100644
--- a/Beta 1.0/code/opening.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,48 +0,0 @@
-import pygame
-import sys
-import time
-
-pygame.init()
-
-
-class Opening:
-    def __init__(self, screen):
-        self.screen_x, self.screen_y = 640, 480
-        self.screen = screen
-        self.clock = pygame.time.Clock()
-        self.text = lambda text, size, color: pygame.font.Font("data/font/DungGeunMo.otf", size).render(text, True, color)
-        self.texts = ["RAGE:", "BLOOD FRONTEER", "새로 시작", "불러오기", "업적", "설정"]
-        self.displayed_texts = ["", "", "", "", "", ""]
-        self.char_indices = [0, 0, 0, 0, 0, 0]
-        self.last_update = time.time()
-        self.update_interval = 0.25  # 250 milliseconds
-        self.char_alphas = [[0] * len(t) for t in self.texts]  # Initialize alphas for each character in each text
-
-    def display_text(self):
-        current_time = time.time()
-        if current_time - self.last_update >= self.update_interval:
-            for i, text in enumerate(self.texts):
-                if self.char_indices[i] < len(text):
-                    self.displayed_texts[i] += text[self.char_indices[i]]
-                    self.char_indices[i] += 1
-            self.last_update = current_time
-
-        # Update alpha values
-        for i in range(len(self.texts)):
-            for j in range(self.char_indices[i]):
-                if self.char_alphas[i][j] < 255:
-                    self.char_alphas[i][j] = min(255, self.char_alphas[i][j] + 5)  # Increase alpha value
-
-        # Render each character with its alpha value
-        y_offsets = [0, 50, 110, 140, 170, 200]  # Different y offsets for each text
-        for i, text in enumerate(self.displayed_texts):
-            x_offset = 0
-            font_size = 50 if i < 2 else 30  # Set font size 50 for first two texts, 30 for others
-            for j, char in enumerate(text):
-                char_surface = self.text(char, font_size, (255, 255, 255)).convert_alpha()
-                char_surface.set_alpha(self.char_alphas[i][j])
-                self.screen.blit(char_surface, (x_offset, y_offsets[i]))
-                x_offset += char_surface.get_width()
-
-    def run(self):
-        self.display_text()
\ No newline at end of file
Index: Beta 1.0/code/save.py
===================================================================
diff --git a/Beta 1.0/code/save.py b/Beta 1.0/code/save.py
deleted file mode 100644
--- a/Beta 1.0/code/save.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,41 +0,0 @@
-# 메인 세이브 파일을 조정하는 모듈입니다.
-import time
-
-
-def list_to_str(l):
-	r = ""
-	for i in l: r += i
-	return r
-class MainSave:
-	def __init__(self):
-		self.save_data = open("../data/save/MF", "r")
-		self.SD_list = self.save_data.readlines()
-		oh = 0
-		for i in self.SD_list:
-			t = []
-			for k in i:
-				if k != "\n": t.append(k)
-
-			self.SD_list[oh] = list_to_str(t)
-			oh += 1
-		print(self.SD_list)
-		self.save_data.close()
-		self.save_data = open("../data/save/MF", "w")
-		self.now_time = time.time()
-
-	def all_save_write(self):
-		print(time.time() - float(self.SD_list[1]))
-
-		self.SD_list[1] = str(time.time())
-		for i in self.SD_list[:-1]:
-			self.save_data.write(i)
-			self.save_data.write("\n")
-		self.save_data.write(self.SD_list[len(self.SD_list)-1])
-
-	def get_data(self, _index):
-		print(self.SD_list[_index-1])
-		return self.SD_list[_index-1]
-
-M = MainSave()
-M.all_save_write()
-M.get_data(1)
\ No newline at end of file
Index: Beta 1.0/code/TextBoxes.py
===================================================================
diff --git a/Beta 1.0/code/TextBoxes.py b/Beta 1.0/code/TextBoxes.py
deleted file mode 100644
--- a/Beta 1.0/code/TextBoxes.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,15 +0,0 @@
-import pygame
-
-class TextBox:
-	def __init__(self, screen:pygame.display.set_mode):
-		self.screen = screen
-		self.text = lambda text, size, color: pygame.font.Font("data/font/DungGeunMo.otf", size).render(text, 0, color)
-
-	def text_draw(self, text, pos: tuple | list, size, color):
-		"""
-		입력받은 값에 따라 이 함수는 무료로 텍스트를 그려줍니다!
-		사용 방법:
-		(텍스트, (x, y), 사이즈, 색깔)
-		"""
-		self.screen.blit(self.text(text,  size, color), pos)
-
Index: Beta 1.0/code/Turret.py
===================================================================
diff --git a/Beta 1.0/code/Turret.py b/Beta 1.0/code/Turret.py
deleted file mode 100644
--- a/Beta 1.0/code/Turret.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,57 +0,0 @@
-import pygame
-# noinspection PyUnresolvedReferences
-import code.attack_alg as atalg
-# 위 구문은 원래 작동 안되는게 정상임 ㅋ
-# 하지만 실제 실행은 code 폴더가 아닌 외부 폴더, 즉 main 파일들이나 Test 계열에서 실행되기에 문제가 없음.
-# 위 noinspection 어쩌구는 Pycharm에서 오류로 표시되는게 거슬려서 저렇게 해놓은거라고 생각하면 됨.
-
-import math
-
-bullet_group = pygame.sprite.Group()
-
-class TurretBullet(pygame.sprite.Sprite):
-	def __init__(self, pos):
-
-		super().__init__()
-		self.pos = pos
-		self.index = 0
-		#self.image = pygame.Surface((10, 10))  # 총알의 크기 설정
-		#self.image.fill((0, 255, 255))  # 빨간색 총알
-		self.image = pygame.image.load("data/img/gun/bullet1.png")
-		self.rect = self.image.get_rect()
-		self.rect.center = self.pos[0]
-
-	def update(self):
-		if self.index < len(self.pos) - 1:
-			self.index += 1
-			self.rect.center = self.pos[self.index]
-		else:
-			self.kill()  # 경로가 끝나면 스프라이트 제거
-
-
-class Turret(pygame.sprite.Sprite):
-	def __init__(self, screen, turret_type, turret_pos, radius=10):
-		self.turret_type = turret_type
-		self.screen = screen
-		self.turret_pos = turret_pos
-		self.radius = radius
-		super().__init__()
-
-	def shoot(self, pos1):
-		path_pos = atalg.generate_path(self.turret_pos, pos1, int(atalg.distance(self.turret_pos, pos1)/10))
-		bullet_group.add(TurretBullet(path_pos))
-
-
-	# print(self.path_pos)
-
-	def is_in(self, pos2: list):
-		return atalg.radius_detect(self.turret_pos, pos2, self.radius)
-
-	def _debug_circle_draw(self, screen, color=(255, 0, 0)):
-		pygame.draw.circle(screen, color, (self.turret_pos), radius=self.radius)
-
-	def update(self):
-		#print("UPDATE")
-		print(bullet_group)
-		bullet_group.draw(self.screen)
-		bullet_group.update()
\ No newline at end of file
Index: Beta 1.0/code/TurretBulletTest.py
===================================================================
diff --git a/Beta 1.0/code/TurretBulletTest.py b/Beta 1.0/code/TurretBulletTest.py
deleted file mode 100644
--- a/Beta 1.0/code/TurretBulletTest.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,69 +0,0 @@
-import pygame
-import sys
-
-# Pygame 초기화
-pygame.init()
-
-# 화면 크기 설정
-screen = pygame.display.set_mode((800, 600))
-pygame.display.set_caption("Pygame Sprite Example")
-
-# 색상 정의
-WHITE = (255, 255, 255)
-
-# FPS 설정
-clock = pygame.time.Clock()
-FPS = 60
-
-class Player(pygame.sprite.Sprite):
-    def __init__(self, x, y):
-        super().__init__()
-        self.image = pygame.Surface((50, 50))
-        self.image.fill((0, 128, 255))  # 파란색으로 채우기
-        self.rect = self.image.get_rect()
-        self.rect.topleft = (x, y)
-        self.speed = 5
-
-    def update(self):
-        keys = pygame.key.get_pressed()
-        if keys[pygame.K_LEFT]:
-            self.rect.x -= self.speed
-        if keys[pygame.K_RIGHT]:
-            self.rect.x += self.speed
-        if keys[pygame.K_UP]:
-            self.rect.y -= self.speed
-        if keys[pygame.K_DOWN]:
-            self.rect.y += self.speed
-
-# Sprite 그룹 생성
-all_sprites = pygame.sprite.Group()
-
-# Player 객체 생성 및 그룹에 추가
-player = Player(100, 100)
-all_sprites.add(player)
-
-# 게임 루프
-running = True
-while running:
-    for event in pygame.event.get():
-        if event.type == pygame.QUIT:
-            running = False
-
-    # 모든 스프라이트 업데이트
-    all_sprites.update()
-
-    # 화면을 하얀색으로 채우기
-    screen.fill(WHITE)
-
-    # 모든 스프라이트 그리기
-    all_sprites.draw(screen)
-
-    # 화면 업데이트
-    pygame.display.flip()
-
-    # FPS 설정
-    clock.tick(FPS)
-
-# Pygame 종료
-pygame.quit()
-sys.exit()
Index: Beta 1.0/data/map/room1.json
===================================================================
diff --git a/Beta 1.0/data/map/room1.json b/Beta 1.0/data/map/room1.json
deleted file mode 100644
--- a/Beta 1.0/data/map/room1.json	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,499 +0,0 @@
-{
-    "size": [
-        20,
-        20
-    ],
-    "startpos": [
-        0,
-        -1
-    ],
-    "tilemap": {
-        "10;3": {
-            "IRID": 0,
-            "img": "SpaceTileCorner3",
-            "pos": [
-                10,
-                3
-            ],
-            "type": "wall"
-        },
-        "10;4": {
-            "IRID": 0,
-            "img": "SpaceTileSide3",
-            "pos": [
-                10,
-                4
-            ],
-            "type": "wall"
-        },
-        "10;5": {
-            "IRID": 0,
-            "img": "SpaceTileCorner2",
-            "pos": [
-                10,
-                5
-            ],
-            "type": "wall"
-        },
-        "11;3": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                11,
-                3
-            ],
-            "type": "wall"
-        },
-        "11;4": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                11,
-                4
-            ],
-            "type": "wall"
-        },
-        "11;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                11,
-                5
-            ],
-            "type": "wall"
-        },
-        "12;3": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                12,
-                3
-            ],
-            "type": "wall"
-        },
-        "12;4": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                12,
-                4
-            ],
-            "type": "wall"
-        },
-        "12;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                12,
-                5
-            ],
-            "type": "wall"
-        },
-        "13;3": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                13,
-                3
-            ],
-            "type": "wall"
-        },
-        "13;4": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                13,
-                4
-            ],
-            "type": "wall"
-        },
-        "13;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                13,
-                5
-            ],
-            "type": "wall"
-        },
-        "14;11": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                14,
-                11
-            ],
-            "type": "wall"
-        },
-        "14;3": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                14,
-                3
-            ],
-            "type": "wall"
-        },
-        "14;4": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                14,
-                4
-            ],
-            "type": "wall"
-        },
-        "14;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                14,
-                5
-            ],
-            "type": "wall"
-        },
-        "15;11": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                15,
-                11
-            ],
-            "type": "wall"
-        },
-        "15;3": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                15,
-                3
-            ],
-            "type": "wall"
-        },
-        "15;4": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                15,
-                4
-            ],
-            "type": "wall"
-        },
-        "15;5": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                15,
-                5
-            ],
-            "type": "wall"
-        },
-        "16;10": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                10
-            ],
-            "type": "wall"
-        },
-        "16;11": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                11
-            ],
-            "type": "wall"
-        },
-        "16;3": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                3
-            ],
-            "type": "wall"
-        },
-        "16;4": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                4
-            ],
-            "type": "wall"
-        },
-        "16;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                5
-            ],
-            "type": "wall"
-        },
-        "16;6": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                6
-            ],
-            "type": "wall"
-        },
-        "16;7": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                7
-            ],
-            "type": "wall"
-        },
-        "16;8": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                8
-            ],
-            "type": "wall"
-        },
-        "16;9": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                16,
-                9
-            ],
-            "type": "wall"
-        },
-        "3;3": {
-            "IRID": 0,
-            "img": "SpaceTileCorner3",
-            "pos": [
-                3,
-                3
-            ],
-            "type": "wall"
-        },
-        "3;4": {
-            "IRID": 0,
-            "img": "SpaceTileSide3",
-            "pos": [
-                3,
-                4
-            ],
-            "type": "wall"
-        },
-        "3;5": {
-            "IRID": 0,
-            "img": "SpaceTileCorner2",
-            "pos": [
-                3,
-                5
-            ],
-            "type": "wall"
-        },
-        "3;7": {
-            "IRID": 0,
-            "img": "SpaceTileCorner3",
-            "pos": [
-                3,
-                7
-            ],
-            "type": "wall"
-        },
-        "3;8": {
-            "IRID": 0,
-            "img": "SpaceTileCorner2",
-            "pos": [
-                3,
-                8
-            ],
-            "type": "wall"
-        },
-        "4;3": {
-            "IRID": 0,
-            "img": "SpaceTileSide2",
-            "pos": [
-                4,
-                3
-            ],
-            "type": "wall"
-        },
-        "4;4": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                4,
-                4
-            ],
-            "type": "wall"
-        },
-        "4;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                4,
-                5
-            ],
-            "type": "wall"
-        },
-        "4;7": {
-            "IRID": 0,
-            "img": "SpaceTileSide2",
-            "pos": [
-                4,
-                7
-            ],
-            "type": "wall"
-        },
-        "4;8": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                4,
-                8
-            ],
-            "type": "wall"
-        },
-        "5;3": {
-            "IRID": 0,
-            "img": "SpaceTileSide2",
-            "pos": [
-                5,
-                3
-            ],
-            "type": "wall"
-        },
-        "5;4": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                5,
-                4
-            ],
-            "type": "wall"
-        },
-        "5;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                5,
-                5
-            ],
-            "type": "wall"
-        },
-        "5;7": {
-            "IRID": 0,
-            "img": "SpaceTileSide2",
-            "pos": [
-                5,
-                7
-            ],
-            "type": "wall"
-        },
-        "5;8": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                5,
-                8
-            ],
-            "type": "wall"
-        },
-        "6;3": {
-            "IRID": 0,
-            "img": "SpaceTileSide2",
-            "pos": [
-                6,
-                3
-            ],
-            "type": "wall"
-        },
-        "6;4": {
-            "IRID": 0,
-            "img": "SpaceTile1",
-            "pos": [
-                6,
-                4
-            ],
-            "type": "wall"
-        },
-        "6;5": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                6,
-                5
-            ],
-            "type": "wall"
-        },
-        "6;7": {
-            "IRID": 0,
-            "img": "SpaceTileSide2",
-            "pos": [
-                6,
-                7
-            ],
-            "type": "wall"
-        },
-        "6;8": {
-            "IRID": 0,
-            "img": "SpaceTileSide1",
-            "pos": [
-                6,
-                8
-            ],
-            "type": "wall"
-        },
-        "7;3": {
-            "IRID": 0,
-            "img": "SpaceTileCorner4",
-            "pos": [
-                7,
-                3
-            ],
-            "type": "wall"
-        },
-        "7;4": {
-            "IRID": 0,
-            "img": "SpaceTileSide4",
-            "pos": [
-                7,
-                4
-            ],
-            "type": "wall"
-        },
-        "7;5": {
-            "IRID": 0,
-            "img": "SpaceTileCorner1",
-            "pos": [
-                7,
-                5
-            ],
-            "type": "wall"
-        },
-        "7;7": {
-            "IRID": 0,
-            "img": "SpaceTileCorner4",
-            "pos": [
-                7,
-                7
-            ],
-            "type": "wall"
-        },
-        "7;8": {
-            "IRID": 0,
-            "img": "SpaceTileCorner1",
-            "pos": [
-                7,
-                8
-            ],
-            "type": "wall"
-        }
-    },
-    "type": "wall"
-}
\ No newline at end of file
Index: Beta 1.0/data/map/room2.json
===================================================================
diff --git a/Beta 1.0/data/map/room2.json b/Beta 1.0/data/map/room2.json
deleted file mode 100644
--- a/Beta 1.0/data/map/room2.json	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,1 +0,0 @@
-{}
\ No newline at end of file
Index: Beta 1.0/data/map/room3.json
===================================================================
diff --git a/Beta 1.0/data/map/room3.json b/Beta 1.0/data/map/room3.json
deleted file mode 100644
--- a/Beta 1.0/data/map/room3.json	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,1 +0,0 @@
-{}
\ No newline at end of file
Index: Beta 1.0/data/map/room4.json
===================================================================
diff --git a/Beta 1.0/data/map/room4.json b/Beta 1.0/data/map/room4.json
deleted file mode 100644
--- a/Beta 1.0/data/map/room4.json	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,1 +0,0 @@
-{}
\ No newline at end of file
Index: Beta 1.0/data/map/room5.json
===================================================================
diff --git a/Beta 1.0/data/map/room5.json b/Beta 1.0/data/map/room5.json
deleted file mode 100644
--- a/Beta 1.0/data/map/room5.json	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,1 +0,0 @@
-{}
\ No newline at end of file
Index: Beta 1.0/1950MapEditor.py
===================================================================
diff --git a/Beta 1.0/1950MapEditor.py b/Beta 1.0/1950MapEditor.py
deleted file mode 100644
--- a/Beta 1.0/1950MapEditor.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,242 +0,0 @@
-# 와 위대한 시작..
-# 1950 게임 맵 에디터 메인 코드
-
-"""IRID 타입 총정리
-0번: 없음
-1번: 다음 방 이동
-2번: 이전 방 이동
-3번: 없음
-"""
-
-import code.button as bt  # 절대 빼먹으면 안되는 것
-import code.MAP as m_ap
-import pygame
-import sys
-import json
-DEBUG = False
-pygame.init()  # pygame 모듈 초기화
-
-
-class Main:
-	def __init__(self):
-		pygame.init()
-		pygame.mixer.init()
-		self.select_SE = pygame.mixer.Sound(r'data/sound/effect/A Piano.wav')
-		self.collect_SE = pygame.mixer.Sound(r'data/sound/effect/Connect.wav')
-
-		if DEBUG: print("성공적으로 Main 클래스가 로드되었습니다")
-		self.screen = pygame.display.set_mode((880, 660))  # 640, 480의 2배
-		self.preview = pygame.rect.Rect(0, 0, 640, 480)
-		self.preview1 = pygame.rect.Rect(0, 480, 640, 180)
-		self.preview2 = pygame.rect.Rect(640, 0, 240, 660)
-		self.clock = pygame.time.Clock()
-
-		self.tile_size = 60
-		self.map_max = 30
-
-		# self.preview1 = pygame.rect.Rect(0, 0, 640, 480)
-		self.Map_c = m_ap.Map(self.screen)
-		self.file_index = 0
-		self.select_IRID = 0
-		self.mouserect = 0
-		self.select_tileType = 1
-		self.map_load_onoff = 0
-		self.saveButton = bt.Button(20, 600, pygame.image.load("data/img/save_btn.png"), 1)
-		self.loadButton = bt.Button(220, 600, pygame.image.load("data/img/load_btn.png"), 1)
-		self.is_wall = 1
-		self.playing = True
-		# 현재 map list 생성
-		self.now_map = list()
-		# self.now_map.append("BIN")
-		for i in range(1, self.Map_c.MAP_COUNT + 1):
-			self.now_map.append(self.Map_c.mapGet(i))
-		if DEBUG: print(self.now_map, "\nasd")
-
-		self.IRID_list = ["없음", "다음 방 이동", "이전 방 이동"]
-		pygame.display.set_caption("1950 Map Editor")
-		self.text = lambda size, text, color, x, y: self.screen.blit(
-			pygame.font.Font(r"data/font/DungGeunMo.otf", size).render(text, 1, color), (x, y))
-		self.pos_x, pos_y = 0, 0
-
-		self.tile_name_list = list(self.Map_c.assets.keys())
-		self.tile_name_list.insert(0, "삭제 모드")
-		if DEBUG: print(self.tile_name_list)
-		self.map_maxcount = self.Map_c.MAP_COUNT
-
-	def draw_preview(self):
-		pygame.draw.rect(self.screen, (0, 0, 0), self.preview)
-
-	def draw_hider(self):
-
-		# self.x1, self.y1 = list(map(lambda pos_x: pos_x*self.tile_size, [self.pos_x, self.y])) print(self.x1,
-		# self.y1) self.tile_rect1, self.tile_rect2 = pygame.rect.Rect(self.x1, self.y1, self.tile_size,
-		# self.tile_size), pygame.rect.Rect(self.pos_x*self.tile_size+5, self.y*self.tile_size+5, self.tile_size-5,
-		# self.tile_size-5) pygame.draw.rect(self.screen, (255, 255, 255), self.tile_rect1) pygame.draw.rect(
-		# self.screen, (255, 255, 255), self.tile_rect2)
-
-		pygame.draw.rect(self.screen, (0, 0, 70), self.preview1)
-		pygame.draw.rect(self.screen, (0, 0, 70), self.preview2)
-
-	def lines(self):
-		for k in range(0, self.map_max * self.tile_size + 1, self.tile_size):  # 가로선
-			x, y = self.Map_c.moveposGet()
-			pygame.draw.line(self.screen, (255, 255, 255), start_pos=(x, k + y),
-							 end_pos=(x + self.map_max * self.tile_size, k + y))
-
-		for k in range(0, self.map_max * self.tile_size + 1, self.tile_size):  # 가로선
-			x, y = self.Map_c.moveposGet()
-			pygame.draw.line(self.screen, (255, 255, 255), start_pos=(k + x, y),
-							 end_pos=(k + x, self.map_max * self.tile_size + y))
-
-	def event(self):
-
-		x, y = pygame.mouse.get_pos()
-		self.mouserect = pygame.rect.Rect(x, y, 10, 10)
-		pygame.draw.rect(self.screen, (255, 255, 255), self.mouserect)  # 마우스에 Rect개체 덮어 씨우기
-
-		x, y = self.Map_c.moveposGet()  # 맵의 이동 좌표 얻기
-		x1, y1 = pygame.mouse.get_pos()  # 마우스 좌표얻기
-		self.pos_x, self.pos_y = (x * -1 + x1) // self.tile_size, (
-				y * -1 + y1) // self.tile_size  # 그걸 Tile size로 나누어 커서가 위치한 pos 계산
-		# print(self.now_map[self.file_index - 1]["tilemap"][f"{self.pos_x};{self.pos_y}"])
-
-		# print(self.pos_x, self.pos_y)  # 그 pos 출력
-
-		# 지금 당장 savefile 저장
-		# noinspection PyTypeChecker
-		# 위 주석은 무시하셈.
-
-		for event in pygame.event.get():
-			if event.type == pygame.QUIT:
-				self.playing = False
-			if event.type == pygame.KEYDOWN:
-				if event.key == pygame.K_i:
-					self.select_IRID += 1
-					self.select_SE.play()
-				if event.key == pygame.K_k and not self.select_IRID == 0:
-					self.select_IRID -= 1
-					self.select_SE.play()
-				if event.key == pygame.K_f and not self.select_tileType == 0:
-					if DEBUG: print("POPIPOPIPO")
-					self.select_tileType -= 1
-					self.select_SE.play()
-				if event.key == pygame.K_r and len(self.tile_name_list) != self.select_tileType + 1:
-					self.select_tileType += 1
-					self.select_SE.play()
-				if event.key == pygame.K_UP:
-					self.file_index += 1
-					# if type(self.now_map[self.file_index-1]) == type(""):
-					# self.now_map[self.file_index-1] = self.Map_c.mapGet(self.file_index)
-					# print(self.now_map[self.file_index-1])
-					# print(self.now_map)
-					self.select_SE.play()
-
-					if DEBUG: print("asd")
-				if event.key == pygame.K_DOWN and not self.file_index == 0:
-					self.file_index -= 1
-					# noinspection PyTypeChecker
-					# if type(self.now_map[self.file_index-1]) == type(""):
-					# self.now_map[self.file_index-1] = self.Map_c.mapGet(self.file_index-1)
-					# print(self.now_map[self.file_index-1])
-					# print(self.now_map)
-					self.select_SE.play()
-
-				if event.key == pygame.K_l:
-					self.select_SE.play()
-					self.is_wall += 1
-					self.is_wall = self.is_wall % 2
-				# print("WALL or FLOOR : {}".format(self.is_wall))
-
-		# 버튼 드로우
-		if self.loadButton.draw(self.screen):
-			self.Map_c.load_to_list(self.now_map[self.file_index])
-			self.collect_SE.play()
-
-		# 마우스 클릭 감지 및, 맵 에디터 설정
-		if pygame.mouse.get_pressed()[0] and self.pos_x > -1 and self.pos_y > -1:  # 마우스 좌클릭 감지
-			if self.mouserect.colliderect(self.preview):
-				try:
-					if self.select_tileType != 0:
-						if DEBUG: print(["floor", "wall"][self.is_wall])
-						self.now_map[self.file_index]["tilemap"][f"{self.pos_x + 1};{self.pos_y + 1}"] = {
-							"img": self.tile_name_list[self.select_tileType], "type": ["floor", "wall"][self.is_wall],
-							"IRID": self.select_IRID,
-							"pos": [self.pos_x + 1, self.pos_y + 1]}
-					else:
-						if DEBUG: print('Delete')
-						del self.now_map[self.file_index]["tilemap"][f"{self.pos_x + 1};{self.pos_y + 1}"]
-					self.Map_c.load_to_list(self.now_map[self.file_index])
-				except KeyError:
-					if DEBUG: print("None")
-
-	def nowMapGet(self):
-		return self.now_map
-
-	def save(self):
-		print("SAVING...")
-		for i in range(int(self.map_maxcount)):
-			if DEBUG: print(i)
-			a = str(json.dumps(self.now_map[i], indent=4, sort_keys=True))
-			# print(a)
-			with open("data\\map\\room%d.json" % int(i + 1), "w") as file:
-				if DEBUG: print(self.now_map[i])
-				file.write(a)
-				if DEBUG: print("GAY")
-
-	def run(self):
-		self.Map_c.load_to_list(self.Map_c.mapGet(1))
-		self.Map_c.draw_set()
-		self.Map_c.brickPassSet(1)
-		while self.playing:
-
-			self.screen.fill((0, 0, 0))
-			try:
-				a = self.IRID_list[self.select_IRID]
-			except:
-				a = "존재하지 않는 IRID"
-
-			self.draw_preview()
-
-			self.Map_c.draw()
-			self.Map_c.event()
-
-			self.lines()
-			self.draw_hider()
-			self.event()
-			self.text(30, "현재 맵 파일 번호: %d" % int(self.file_index + 1), (255, 255, 255), 500, 600)
-			self.text(30, a, (255, 255, 255), 600, 550)
-			self.text(30, "현재 IRID: %d" % self.select_IRID, (255, 255, 255), 600, 500)
-			self.text(30, "현재 좌표: %d;%d" % (self.pos_x + 1, self.pos_y + 1), (255, 255, 255), 300, 500)
-			try:
-				self.text(30,
-						  "현재 타일:" + self.now_map[self.file_index - 1]["tilemap"][f"{self.pos_x + 1};{self.pos_y + 1}"][
-							  "img"], (255, 255, 255), 300, 550)
-			except KeyError:
-				self.text(30, "현재 타일: 없음", (255, 255, 255), 300, 550)
-			self.text(30, f"현재 선택 타일", (255, 255, 255), 650, 0)
-			self.text(30, f"벽 여부: {bool(self.is_wall)}", (255, 255, 255), 650, 100)
-
-			try:
-				self.text(19,
-						  f"현재 타일 벽 여부: {self.now_map[self.file_index - 1]["tilemap"][f"{self.pos_x + 1};{self.pos_y + 1}"]["type"]}",
-						  (255, 255, 255), 650, 150)
-			except KeyError:
-				self.text(19, f"현재 타일 벽 여부: None", (255, 255, 255), 650, 150)
-			self.text(20, f"{self.tile_name_list[self.select_tileType]}", (255, 255, 255), 700, 80)
-			# 미리보기 드로우
-			if self.select_tileType != 0:
-				self.screen.blit(
-					pygame.transform.scale(self.Map_c.assets[self.tile_name_list[self.select_tileType]], (40, 40)),
-					(750, 40))
-			pygame.display.update()
-
-			self.clock.tick(60)
-		# print(self.now_map[self.file_index])
-		# print(json.dumps(self.now_map[self.file_index], indent=4, separators=("{", "="), sort_keys=True))
-
-
-M = Main()
-M.run()
-if DEBUG: print("이게맞나")
-if DEBUG: print(M.map_maxcount)
-M.save()
Index: Beta 1.0/main.py
===================================================================
diff --git a/Beta 1.0/main.py b/Beta 1.0/main.py
deleted file mode 100644
--- a/Beta 1.0/main.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,56 +0,0 @@
-import pygame
-import sys
-import time
-import code.cousor as cousor
-import code.opening as opening
-import code.msgbox as msgbox
-
-pygame.init()
-
-
-class Game:
-    def __init__(self):
-        self.screen_x, self.screen_y = 640, 480
-        self.screen = pygame.display.set_mode((self.screen_x, self.screen_y))
-        self.clock = pygame.time.Clock()
-        self.cousor_class_opening = cousor.Cousor(self.screen, 8, (140, 115), (120, 145), (58, 175), (58, 205))
-        self.opening = opening.Opening(self.screen)
-
-        # 0 : 기본값 = 오프닝
-        self.now_screen = 0
-
-
-
-    def run(self):
-        while True:
-            self.now_time = pygame.time.get_ticks()
-
-            for event in pygame.event.get():
-                if event.type == pygame.QUIT:
-                    pygame.quit()
-                    sys.exit()
-                if event.type == pygame.KEYDOWN:
-                    if self.now_screen == 0 and self.now_time > 2000:
-                        if event.key == pygame.K_UP:
-                            self.cousor_class_opening.cousor_up()
-                        if event.key == pygame.K_DOWN:
-                            self.cousor_class_opening.cousor_down()
-                        if event.key == pygame.K_RETURN:
-                            msgbox.MsgBox(self.screen, ["2972년 11월 21일, 김두한이 죽은지 1000년이 지났을때.", "지구는 이미 생활하기 힘들 정도로 파괴되었다.",
-                                                        "그렇게 온 기술을 모아 지구에서는 우주선을 만들어 똑똑하고,","유능한 일부의 개척민들과", "수천 개의 배아들을 실었다. ",
-                                                        "그 우주선의 이름은 YJ-P1", "YJ-P1은 그렇게 인류의 새 개척지를 찾기 위한", "아주 길고도 긴 여행을 시작하게 된다."],
-                                          10, 0, 20)
-                            self.now_screen += self.cousor_class_opening.get_cousor_index() + 1
-            if self.now_screen == 0:
-                if self.now_time > 2000:
-
-                    self.cousor_class_opening.draw()
-                self.opening.run()
-
-            pygame.display.update()
-            self.screen.fill(0)
-            self.clock.tick(60)
-
-
-G = Game()
-G.run()
Index: Beta 1.0/TEst.py
===================================================================
diff --git a/Beta 1.0/TEst.py b/Beta 1.0/TEst.py
deleted file mode 100644
--- a/Beta 1.0/TEst.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,44 +0,0 @@
-# 이거 뭐하는 파일이냐면:
-# 그저 쌈@박하게 모듈 테스트 하는 곳
-import code.cousor as cousor
-import code.opening as opening
-import code.gui as gui
-import code.gun_shoot as shoot
-import pygame, sys, time
-root = pygame.display.set_mode((640, 480))
-# [0, 50, 110, 140, 170, 200]
-c = cousor.Cousor(root, 8, (140, 115), (120, 145), (58, 175), (58, 205))
-o = opening.Opening(root)
-t = gui.StatsBar(root)
-all_sprite = pygame.sprite.Group()
-bullet_nums = 10
-meg_num = 5
-while True:
-	time = pygame.time.get_ticks()
-	t.parameter_edit(100,0, [bullet_nums, 10, meg_num], "M1911")
-	t.draw()
-	for event in pygame.event.get():
-		if event.type == pygame.QUIT:
-			pygame.quit()
-			sys.exit()
-		if event.type == pygame.KEYDOWN:
-			if event.key == pygame.K_UP:
-				if bullet_nums != 0:
-					bullets = shoot.Bullet(320, 480)
-					bullet_nums -= 1
-					all_sprite.add(bullets)
-				else:
-					pygame.mixer.Sound("data/sound/effect/Shot0.wav").play()
-				print("TEST")
-			if event.key == pygame.K_r:
-				if meg_num != 0:
-					meg_num -= 1
-					bullet_nums = 10
-					pygame.mixer.Sound("data/sound/effect/Reload0.wav").play()
-				else: pygame.mixer.Sound("data/sound/effect/A Piano.wav").play()
-
-
-	all_sprite.update()
-	all_sprite.draw(root)
-	pygame.display.update()
-	root.fill(0)
\ No newline at end of file
Index: Beta 1.0/Test_turret.py
===================================================================
diff --git a/Beta 1.0/Test_turret.py b/Beta 1.0/Test_turret.py
deleted file mode 100644
--- a/Beta 1.0/Test_turret.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,124 +0,0 @@
-import pygame
-import sys
-import math
-import code.Turret as turret
-import code.attack_alg as atalg
-
-# Pygame 초기화
-pygame.init()
-
-# 창 크기 설정
-WIDTH, HEIGHT = 800, 600
-screen = pygame.display.set_mode((WIDTH, HEIGHT))
-pygame.display.set_caption("Path Movement")
-
-# 색상 정의
-WHITE = (255, 255, 255)
-RED = (255, 0, 0)
-
-
-class TurretBullet(pygame.sprite.Sprite):
-	def __init__(self, pos):
-		super().__init__()
-		self.pos = pos
-		self.index = 0
-		self.image = pygame.Surface((10, 10))  # 총알의 크기 설정
-		self.image.fill((255, 255, 0))  # 빨간색 총알
-		self.rect = self.image.get_rect()
-		self.rect.topleft = self.pos[self.index]
-
-	def update(self):
-		if self.index < len(self.pos) - 1:
-			self.index += 1
-			self.rect.topleft = self.pos[self.index]
-		else:
-			self.kill()  # 경로가 끝나면 스프라이트 제거
-
-# pos1에서 pos2로 이동하는 경로 생성 함수
-def generate_path(pos1, pos2, steps=100):
-	path = []
-	x1, y1 = pos1
-	x2, y2 = pos2
-
-	for i in range(steps):
-		t = i / (steps - 1)
-		x = x1 + (x2 - x1) * t
-		y = y1 + (y2 - y1) * t
-		path.append((x, y))
-
-	return path
-
-
-# 객체를 따라 이동시키는 함수
-def move_along_path(path):
-	for pos in path:
-		print(pos)
-		screen.fill(WHITE)
-		pygame.draw.circle(screen, RED, (int(pos[0]), int(pos[1])), 5)
-
-# 메인 함수
-def main():
-	pos1 = [300, 300]
-	pos2 = [300, 300]
-	T = turret.Turret(screen, 1, pos1, radius=300)
-	path = generate_path(pos1, pos2, steps=int(atalg.distance(pos1, pos2))*100)
-	playerpos = [0, 0]
-	#T.shoot(pos2)
-
-	time = 0
-	time += 1
-
-	while True:
-		time += 1
-		print(time)
-		if T.is_in(playerpos):
-			T._debug_circle_draw(screen, (255, 0, 0))
-			a = generate_path([300, 300], playerpos, 25)
-			if time > 60:
-				time = 0
-				T.shoot(playerpos)
-
-		else:
-			T._debug_circle_draw(screen, (0, 255, 0))
-
-		player_rect = pygame.Rect(0, 0, 30, 30)
-		player_rect.center = playerpos
-
-		pygame.draw.rect(screen, (255, 0, 255), player_rect)
-		T.update()
-
-		pygame.display.update()
-
-
-
-		pygame.time.Clock().tick(60)
-		screen.fill((255, 255, 255))
-
-		for event in pygame.event.get():
-			if event.type == pygame.QUIT:
-				pygame.quit()
-				sys.exit()
-			if event.type == pygame.KEYDOWN:
-
-				if event.key == pygame.K_w:
-					playerpos[1] -= 10
-				if event.key == pygame.K_a:
-					playerpos[0] -= 10
-				if event.key == pygame.K_s:
-					playerpos[1] += 10
-				if event.key == pygame.K_d:
-					playerpos[0] += 10
-		k = pygame.key.get_pressed()
-		if k[pygame.K_w]:
-			playerpos[1] -= 10
-		if k[pygame.K_a]:
-			playerpos[0] -= 10
-		if k[pygame.K_s]:
-			playerpos[1] += 10
-		if k[pygame.K_d]:
-			playerpos[0] += 10
-
-
-
-if __name__ == "__main__":
-	main()
Index: Beta 1.0/TESTFONT.py
===================================================================
diff --git a/Beta 1.0/TESTFONT.py b/Beta 1.0/TESTFONT.py
deleted file mode 100644
--- a/Beta 1.0/TESTFONT.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,92 +0,0 @@
-import pygame
-import sys
-import math
-import code.Turret as turret
-import code.TextBoxes as Text
-
-# Pygame 초기화
-pygame.init()
-
-# 창 크기 설정
-WIDTH, HEIGHT = 800, 600
-screen = pygame.display.set_mode((WIDTH, HEIGHT))
-pygame.display.set_caption("Path Movement")
-
-# 색상 정의
-WHITE = (255, 255, 255)
-RED = (255, 0, 0)
-
-
-# pos1에서 pos2로 이동하는 경로 생성 함수
-def generate_path(pos1, pos2, steps=100):
-	path = []
-	x1, y1 = pos1
-	x2, y2 = pos2
-
-	for i in range(steps):
-		t = i / (steps - 1)
-		x = x1 + (x2 - x1) * t
-		y = y1 + (y2 - y1) * t
-		path.append((x, y))
-
-	return path
-
-
-# 객체를 따라 이동시키는 함수
-def move_along_path(path):
-	for pos in path:
-		print(pos)
-		screen.fill(WHITE)
-		pygame.draw.circle(screen, RED, (int(pos[0]), int(pos[1])), 5)
-
-
-
-
-# 메인 함수
-def main():
-	pos1 = [300, 300]
-	pos2 = [300, 300]
-	T = turret.Turret(1, pos1, 100)
-	TB = Text.TextBox(screen)
-	path = generate_path(pos1, pos2, 10)
-	playerpos = [0, 0]
-	T.shoot(pos2)
-
-	while True:
-		print(T.is_in(playerpos))
-		if T.is_in(playerpos):
-			T._debug_circle_draw(screen, (255, 0, 0))
-			TB.text_draw("포탑에 근접했습니다", (0, 0), 20, (255, 0, 255))
-
-		else:
-			T._debug_circle_draw(screen, (0, 255, 0))
-
-		player_rect = pygame.Rect(0, 0, 30, 30)
-		player_rect.center = playerpos
-
-		pygame.draw.rect(screen,(255, 0, 255), player_rect)
-
-		pygame.display.update()
-		pygame.time.Clock().tick(30)
-		screen.fill((255, 255, 255))
-
-		for event in pygame.event.get():
-			if event.type == pygame.QUIT:
-				pygame.quit()
-				sys.exit()
-			if event.type == pygame.KEYDOWN:
-				if event.key == pygame.K_w:
-					playerpos[1] -= 10
-				if event.key == pygame.K_a:
-					playerpos[0] -= 10
-				if event.key == pygame.K_s:
-					playerpos[1] += 10
-				if event.key == pygame.K_d:
-					playerpos[0] += 10
-
-
-
-
-
-if __name__ == "__main__":
-	main()
Index: Beta 1.0/TestTrurretBUllet.py
===================================================================
diff --git a/Beta 1.0/TestTrurretBUllet.py b/Beta 1.0/TestTrurretBUllet.py
deleted file mode 100644
--- a/Beta 1.0/TestTrurretBUllet.py	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
+++ /dev/null	(revision 9fa97356ca052af0f4b65fda21985b1614d93395)
@@ -1,54 +0,0 @@
-import pygame
-
-# Pygame 스프라이트 초기화
-pygame.init()
-
-# TurretBullet 클래스 정의
-class TurretBullet(pygame.sprite.Sprite):
-    def __init__(self, pos):
-        super().__init__()
-        self.pos = pos
-        self.index = 0
-        self.image = pygame.Surface((10, 10))  # 총알의 크기 설정
-        self.image.fill((255, 0, 0))  # 빨간색 총알
-        self.rect = self.image.get_rect()
-        self.rect.topleft = self.pos[self.index]
-
-    def update(self):
-        if self.index < len(self.pos) - 1:
-            self.index += 1
-            self.rect.topleft = self.pos[self.index]
-        else:
-            self.kill()  # 경로가 끝나면 스프라이트 제거
-
-# Pygame 화면 설정 (예시)
-screen = pygame.display.set_mode((800, 600))
-pygame.display.set_caption("TurretBullet Example")
-
-# 스프라이트 그룹 생성
-bullet_group = pygame.sprite.Group()
-
-# TurretBullet 인스턴스 생성 및 그룹에 추가
-bullet_path = [[100, 100], [200, 200], [300, 300], [400, 400], [500, 500]]
-bullet = TurretBullet(bullet_path)
-bullet_group.add(bullet)
-
-# 게임 루프 (예시)
-running = True
-while running:
-    for event in pygame.event.get():
-        if event.type == pygame.QUIT:
-            running = False
-
-    # 화면 지우기
-    screen.fill((0, 0, 0))
-
-    # 스프라이트 그룹 업데이트 및 그리기
-    bullet_group.update()
-    bullet_group.draw(screen)
-
-    # 화면 업데이트
-    pygame.display.flip()
-
-# Pygame 종료
-pygame.quit()
diff --git a/Beta 1.0/data/font/__init__.py b/Beta 1.0/data/font/__init__.py
deleted file mode 100644
diff --git a/Beta 1.0/data/__init__.py b/Beta 1.0/data/__init__.py
deleted file mode 100644
diff --git a/Beta 1.0/__init__.py b/Beta 1.0/__init__.py
deleted file mode 100644
diff --git a/Beta 1.0/data/font/DungGeunMo.otf b/Beta 1.0/data/font/DungGeunMo.otf
deleted file mode 100644
index 9112c3ea89cb7b4f2d4fff9206bce74ea22cbcbc..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/chr/PlyNormalFront1.png b/Beta 1.0/data/img/chr/PlyNormalFront1.png
deleted file mode 100644
index daf010bf1ac814816b230e70075bbcaeabff6664..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/chr/PlyNormalFront2.png b/Beta 1.0/data/img/chr/PlyNormalFront2.png
deleted file mode 100644
index 827f90dfa253fbe670fdc334edbcf86c5d3d86e2..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/chr/PlyNormalFront3.png b/Beta 1.0/data/img/chr/PlyNormalFront3.png
deleted file mode 100644
index ebbfd7a816d3aa109c62b6ec082a33eab15bd5b3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/chr/제목 없음.png b/Beta 1.0/data/img/chr/제목 없음.png
deleted file mode 100644
index 70df119ee9707edd7af1b1ea3e95382266f90bb1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/gun/bullet1.png b/Beta 1.0/data/img/gun/bullet1.png
deleted file mode 100644
index b88f485d6728ca993d357233471ac7bf4604dd8e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/gun/bullet2.png b/Beta 1.0/data/img/gun/bullet2.png
deleted file mode 100644
index 964003236f893e5fb3ea9eefa586279b7e016428..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/gun/M1Garand.png b/Beta 1.0/data/img/gun/M1Garand.png
deleted file mode 100644
index c597c0824dc53dadd62658bdf6c753c93cd5535f..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/gun/M1911.png b/Beta 1.0/data/img/gun/M1911.png
deleted file mode 100644
index 68937d911a304e95d59363ac8a9cbd5b56c27359..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/gun/WbRebolber.png b/Beta 1.0/data/img/gun/WbRebolber.png
deleted file mode 100644
index 36333de0758b833e77bfe8398d9979ce3b92e1c6..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTile1.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTile1.png
deleted file mode 100644
index 1c003a950e15135d6fc0e3025fc865cbd8e00e33..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner1.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner1.png
deleted file mode 100644
index 7752d4defa5e417b4f21df8dad038f1c936dfecc..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner2.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner2.png
deleted file mode 100644
index 160f45d58dcabf96eb7ccdc76b97c8ec4d5676d8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner3.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner3.png
deleted file mode 100644
index 85768dbfb567400883ac45162cd30fb0a51e71bc..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner4.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileCorner4.png
deleted file mode 100644
index 1c3e9ed6a14898ed0f68dfa7aac586ec732ed73c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide1.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide1.png
deleted file mode 100644
index 2efdefbb1fa34ac15b7d19d52544b67257528c2c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide2.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide2.png
deleted file mode 100644
index f37e6a745f3462ac51df8a9f2735cb8beaedee3c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide3.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide3.png
deleted file mode 100644
index be1fb9424bb4202529f42f2e9087733665f7b144..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide4.png b/Beta 1.0/data/img/tile/SPACESHIPS/SpaceTileSide4.png
deleted file mode 100644
index 04d5c8d517f1be13e5678f7c18c3e5a3a41dfddc..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/cousor.png b/Beta 1.0/data/img/cousor.png
deleted file mode 100644
index e1c6447a70530abc80f56b0116cfb4c4a54021af..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/load_btn.png b/Beta 1.0/data/img/load_btn.png
deleted file mode 100644
index 8a9a6d9e95041b30461d2199b6cce5af54889728..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/save_btn.png b/Beta 1.0/data/img/save_btn.png
deleted file mode 100644
index 5d4252d83f716b6febca4d5a36eed637005e8a12..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/Starships.png b/Beta 1.0/data/img/Starships.png
deleted file mode 100644
index 15ea64ecfda72684f0836e9ad39c31cf962dce5d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/img/제목 없음.png b/Beta 1.0/data/img/제목 없음.png
deleted file mode 100644
index 3a33530d9d38226d7da830c759d1a9a62d239ad7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/save/MF b/Beta 1.0/data/save/MF
deleted file mode 100644
index ac0cd8608d4d054c2c69f7cf6db8614290b4be92..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/A Piano.wav b/Beta 1.0/data/sound/effect/A Piano.wav
deleted file mode 100644
index b631ecd5723d39ca592b4301336e28c03840cbc9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/Connect.wav b/Beta 1.0/data/sound/effect/Connect.wav
deleted file mode 100644
index 610cbb82896143c7757d499c7bdd877fe0968fbb..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/GlassBroken.mp3 b/Beta 1.0/data/sound/effect/GlassBroken.mp3
deleted file mode 100644
index cd650f2cc67934af5040a40e623c03a0ff7fca9f..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/HeartBeat.mp3 b/Beta 1.0/data/sound/effect/HeartBeat.mp3
deleted file mode 100644
index 3bcff8560eb5a7436f9751fa742419e2ef0b700b..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/Rebolber1.mp3 b/Beta 1.0/data/sound/effect/Rebolber1.mp3
deleted file mode 100644
index dbfe4507aee98b67a33ff0cdb997b7ab715bc846..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/Reload0.wav b/Beta 1.0/data/sound/effect/Reload0.wav
deleted file mode 100644
index 2008a6018080042866a70e55a1e904e61a7b6692..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/Shot0.wav b/Beta 1.0/data/sound/effect/Shot0.wav
deleted file mode 100644
index 33de6c54ee2fbb411bd99299ff0b3245d90a7730..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/Shot1.mp3 b/Beta 1.0/data/sound/effect/Shot1.mp3
deleted file mode 100644
index 3fbd27b13ddaf7a851ea2fde57c51a1b3d9ae9f9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/Sound license b/Beta 1.0/data/sound/effect/Sound license
deleted file mode 100644
index 0210ffd961606c307292d0ffdf8f08c9036174d4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0/data/sound/effect/Typing.wav b/Beta 1.0/data/sound/effect/Typing.wav
deleted file mode 100644
index df613ed51ba6bd8864d98abe81b3f30ec5734d00..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/Beta 1.0 (2).zip b/Beta 1.0 (2).zip
deleted file mode 100644
index 8260f42269a3c869a2829879f1ae84f81642c0fd..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

